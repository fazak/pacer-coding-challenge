version: 2.1

orbs:
  python: circleci/python@2.1.1
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-ecs: circleci/aws-ecs@3.2.0

jobs:
  unit-test:
    working_directory: ~/pacer-app 
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run unit test
          command: export DEBUG=True && export SECRET_KEY=${DJANGO_SECRET_KEY} &&
                   export USE_RDS=False && python3 manage.py test

#  build-and-push-app:
#    steps:
#      - requires:
#          - unit-test
#      - checkout
#      - aws-ecr/build-and-push-image:
#          dockerfile: docker/Dockerfile.app
#          context: .
#          repo: "${APP_PREFIX}-app"
#          tag: "${CIRCLE_SHA1}"
#
#  build-and-push-nginx:
#    - checkout
#    - aws-ecr/build-and-push-image:
#        dockerfile: docker/Dockerfile.nginx
#        context: .
#        repo: "${APP_PREFIX}-nginx"
#        tag: "${CIRCLE_SHA1}"

workflows:
  pacer-workflow:
    jobs:
      - unit-test
      - aws-ecr/build-and-push-image:
          name: app-ecr-job
          requires:
            - unit-test
          dockerfile: docker/Dockerfile.app
          context: .
          repo: "${APP_PREFIX}-app"
          tag: "${CIRCLE_SHA1}"
      - aws-ecr/build-and-push-image:
          name: nginx-ecr-job
          dockerfile: docker/Dockerfile.nginx
          context: .
          repo: "${APP_PREFIX}-nginx"
          tag: "${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update:
          requires:
            - app-ecr-job
            - nginx-ecr-job
          family: "${APP_PREFIX}-family"
          service-name: "${APP_PREFIX}-service"
          cluster: "${APP_PREFIX}-cluster"
          container-image-name-updates: "container=${APP_PREFIX}-app,tag=${CIRCLE_SHA1},
                                         container=${APP_PREFIX}-nginx,tag=${CIRCLE_SHA1}"